import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { Header } from "~/components/Header";
import { useState } from "react";
import { type Habit } from "@prisma/client";

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Tracker App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen bg-gray-900 text-white">
        <Header />
        <Content />
      </main>
    </>
  );
};

export default Home;

export const Content: React.FC = () => {
  const { data: sessionData } = useSession();
  const [selectedHabit, setSelectedHabit] = useState<Habit | null>(null);

  const { data: habits, refetch: refetchHabits } = api.habit.getAll.useQuery(
    undefined,
    {
      enabled: sessionData?.user !== undefined,
      onSuccess: (data) => {
        setSelectedHabit(selectedHabit ?? data[0] ?? null);
      },
    }
  );
  const createHabit = api.habit.create.useMutation({
    onSuccess: () => {
      void refetchHabits();
    },
  });
  return (
    <div className="mx-5 mt-5 grid grid-cols-4 gap-2">
      <div className="h-screen px-2">
        <ul className="h-1/3 rounded-md bg-gray-700 p-2 text-white">
          {habits?.map((habit) => (
            <li key={habit.id}>
              <Link
                href="#"
                onClick={(e) => {
                  e.preventDefault();
                  setSelectedHabit(habit);
                }}
              >
                {habit.name}
              </Link>
            </li>
          ))}
        </ul>
        <div className="my-5 h-[2px] w-full rounded bg-gray-500"></div>
        <input
          type="text"
          placeholder="New Habit"
          className="w-full rounded border border-gray-500 bg-gray-700 p-1 outline-none"
          onKeyDown={(e) => {
            if (e.key === "Enter") {
              createHabit.mutate({ name: e.currentTarget.value });
              e.currentTarget.value = "";
            }
          }}
        />
      </div>
      <div className="col-span-3"></div>
    </div>
  );
};

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
